#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');
const moment = require('moment');
const sharp = require('sharp');
const args = process.argv.slice(2);
const srcDir = path.resolve(__dirname, '..', 'static/photo');
const distDir = path.resolve(__dirname, 'dist');


function sharpImage(srcName, destName) {
    return new Promise(resolve=>{
        sharp(srcName)
        .resize({ width: 200 })
        .toFile(destName)
        .then(()=>{ resolve() });
    });
}

async function genThumb(dir) {
    const list = fs.readdirSync(path.join(srcDir, dir));
    for (const file of list) {
        if (/^\./.test(file)) {
            continue;
        }
        const fullname = path.join(dir, file);
        const srcName = path.join(srcDir, fullname);
        const stat = fs.statSync(srcName);
        if(stat.isDirectory()) {
            await genThumb(fullname);
        } else {
            const destName = path.join(distDir, fullname);
            if (!fs.existsSync(destName)||1) {
                console.log('finish:', fullname);
                fs.ensureFileSync(destName);
                await sharpImage(srcName, destName);
            }
        }
    }
}

fs.ensureDirSync(distDir);
genThumb('');
